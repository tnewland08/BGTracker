@model BGTracker.Models.GlucoseTrackerModels.GlucoseTrackerCreate

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>GlucoseTrackerCreate</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BloodGlucose, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BloodGlucose, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BloodGlucose, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CorrectionDose, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="dose" type="text" name="CorrectionDose" />
                @*@Html.EditorFor(model => model.CorrectionDose, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.CorrectionDose, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalCarbs, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalCarbs, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalCarbs, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FoodDose, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="dose" type="text" name="FoodDose" />
                @*@Html.EditorFor(model => model.FoodDose, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.FoodDose, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InsulinDose, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <span id="totalDose">0</span>
                @*@Html.EditorFor(model => model.InsulinDose, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.InsulinDose, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TimeOfDose, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TimeOfDose, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TimeOfDose, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index") |
    @Html.ActionLink("Cancel", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script language="javascript" type="text/javascript">
    $(document).ready(function () {

        $(".dose").each(function () {

            $(this).keyup(function () {
                calculateSum();
            });
        });
    });

    function calculateSum() {

        var sum = 0;
        $(".dose").each(function () {

            if (!isNaN(this.value) && this.value.length != 0) {
                sum += parseFloat(this.value);
            }
        });

        $("#totalDose").html(sum.toFixed(2));
    }
        //$(document).ready(function () {
        //    ("CorrectionDose, FoodDose").on("keydown keyup", function () {
        //        sum();
        //    });
        //});
        //function sum() {
        //    var num1 = document.getElementById('CorrectionDose').value;
        //    var num2 = document.getElementById('FoodDose').value;
        //    var result = parseInt(num1) + parseInt(num2);
        //    if (!isNaN(result)) {
        //        document.getElementById('InsulinDose').value = result;
        //    }
        //}
 </script>

}
